

.. _sphx_glr_intro_scipy_auto_examples_plot_filters.py:


Explore signal filtering with scipy.signal
=============================================

Look at median filtering and wiener filter: two non-linear low-pass
filters.


Generate a signal with some noise



.. code-block:: python

    import numpy as np
    np.random.seed(0)
    t = np.linspace(0, 5, 100)
    x = np.sin(t) + .1 * np.random.normal(size=100)








Apply a variety of turn-key filters to it, and plot the result



.. code-block:: python

    from scipy import signal
    from matplotlib import pyplot as plt
    plt.figure(figsize=(7, 4))
    plt.plot(x, label='Original signal')
    plt.plot(signal.medfilt(x), label='medfilt: median filter')
    plt.plot(signal.wiener(x), label='wiener: wiener filter')

    plt.legend(loc='best')
    plt.show()



.. image:: /intro/scipy/auto_examples/images/sphx_glr_plot_filters_001.png
    :align: center




**Total running time of the script:** ( 0 minutes  0.039 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_filters.py <plot_filters.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_filters.ipynb <plot_filters.ipynb>`

.. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
