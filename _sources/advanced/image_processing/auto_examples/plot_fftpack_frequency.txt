

.. _sphx_glr_advanced_image_processing_auto_examples_plot_fftpack_frequency.py:


===================
Peak FFT frequency
===================




.. code-block:: python


    import numpy as np
    from scipy import fftpack
    from matplotlib import pyplot as plt

    # Generate the signal
    # -------------------

    # Seed the random number generator
    np.random.seed(1234)

    time_step = 0.02
    period = 5.

    time_vec = np.arange(0, 20, time_step)
    sig = (np.sin(2 * np.pi / period * time_vec)
           + 0.5 * np.random.randn(time_vec.size))

    # Compute and plot the power and zoom around the peak
    # ---------------------------------------------------

    sample_freq = fftpack.fftfreq(sig.size, d=time_step)
    sig_fft = fftpack.fft(sig)
    pidxs = np.where(sample_freq > 0)
    freqs = sample_freq[pidxs]
    power = np.abs(sig_fft)[pidxs]

    # Plot the FFT power
    plt.plot(freqs, power)
    plt.xlabel('Frequency [Hz]')
    plt.ylabel('plower')

    freq = freqs[power.argmax()]

    # An inner plot to show the peak frequency
    axes = plt.axes([0.3, 0.3, 0.5, 0.5])
    plt.title('Peak frequency')
    plt.plot(freqs[:8], power[:8])
    plt.setp(axes, yticks=[])

    plt.show()

**Total running time of the script:** ( 0 minutes  0.000 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_fftpack_frequency.py <plot_fftpack_frequency.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_fftpack_frequency.ipynb <plot_fftpack_frequency.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
