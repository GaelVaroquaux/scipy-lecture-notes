

.. _sphx_glr_guide_auto_examples_plot_regression.py:


Simple Regression
====================

Fit a simple linear regression using 'statsmodels', compute corresponding
p-values.



.. code-block:: python

    # Original author: Thomas Haslwanter

    import numpy as np
    import matplotlib.pyplot as plt
    import pandas

    # For statistics. Requires statsmodels 5.0 or more
    from statsmodels.formula.api import ols
    # Analysis of Variance (ANOVA) on linear models
    from statsmodels.stats.anova import anova_lm


Generate and show the data



.. code-block:: python

    x = np.linspace(-5, 5, 20)

    # To get reproducable values, provide a seed value
    np.random.seed(1)

    y = -5 + 3*x + 4 * np.random.normal(size=x.shape)

    # Plot the data
    plt.figure(figsize=(5, 4))
    plt.plot(x, y, 'o')


Multilinear regression model, calculating fit, P-values, confidence
intervals etc.



.. code-block:: python


    # Convert the data into a Pandas DataFrame to use the formulas framework
    # in statsmodels
    data = pandas.DataFrame({'x': x, 'y': y})

    # Fit the model
    model = ols("y ~ x", data).fit()

    # Print the summary
    print(model.summary())

    # Peform analysis of variance on fitted linear model
    anova_results = anova_lm(model)

    print('\nANOVA results')
    print(anova_results)


Plot the fitted model



.. code-block:: python


    # Retrieve the parameter estimates
    offset, coef = model._results.params
    plt.plot(x, x*coef + offset)
    plt.xlabel('x')
    plt.ylabel('y')

    plt.show()

**Total running time of the script:** ( 0 minutes  0.000 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_regression.py <plot_regression.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_regression.ipynb <plot_regression.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
